package algorithm.backtracking;

public class PartitionOfKSubsumOfEqualSum {
	
	int[] array;
	boolean[] visited;
	
	int SumK = -1;
	
	public PartitionOfKSubsumOfEqualSum(int[] array){
		this.array = array;
	}
	
	public int[] getIndexOfElementEqualToSum(int partition){
		int[] result=new int[partition];
		int count=0;
		int sum=0;
		for(int i=0; i < array.length ; i++){
			if(visited[i] == false && count < partition){
				result[count] = i;
				sum += result[count];
				count++;
			}
		}
		if(count == partition){
			if(SumK == -1){
				this.SumK = sum; 
			}
			System.out.println("Found Element Equals to =" + Sumk + " is i=" + result[0] + " , " + result[1]);
			return result;
		}
		return null;
	}
	
	
	
	

}
